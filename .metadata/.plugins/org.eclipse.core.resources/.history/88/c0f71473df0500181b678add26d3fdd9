package LinkedList;

class LNode{
	
	int data; 
	LNode next;
	public LNode (int data){
		this.data=data;
		this.next=null;
	}
}


class LList{
	
	LNode head;
	
	public LList() {
		head=null;
	}
	
	public  void push(int x) {
		
		LNode temp = new LNode(x);
		temp.next=this.head;
		this.head=temp;
	}
	
	public void reverse() {
		
		LNode previous=null;
		LNode nextNode=null;
		LNode current =this.head;
  // reverse needs three pointers 
  //current previous and next 
		while(current!=null) {
			//assign the nextNode from current->next pointer
			 nextNode=current.next;
			 current.next=previous;
			 previous=current;
			 current=nextNode;
		}
		this.head=previous;
		
	}
	public void display() {
		
		LNode temp=this.head;
		while(temp!=null) {
			System.out.print(temp.data);
			temp=temp.next;
		}
	}
	
	public int getSizeList(LList l) {
		int size=0;
		LNode temp = l.head;
		while(temp!=null) {
			size=size+1;
			temp=temp.next;
		}
		return 0;
	}
}


public class ReverseLinkedList {
	
	public static void main(String[] args) {
		
		LList l = new LList();
		LList m = new LList();
		l.push(1);
		l.push(2);
		l.display();
		m.push(3);
		m.push(4);
	
	}

}
