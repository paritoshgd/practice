package LinkedList;

//Write a function to delete a node (except the tail) in a singly linked list, given only access to that node.

//Supposed the linked list is 1 -> 2 -> 3 -> 4 and you are given the third node with value 3, the linked list should become 1 -> 2 -> 4 after calling your function.
//https://leetcode.com/problems/delete-node-in-a-linked-list/description/

class DNode{
	
	int data;
	DNode next;
	
	DNode(int x){
		this.data=x;
		this.next=null;
	}
}

class DList{
	
	DNode head;
	
	DList(){
		this.head=null;
	}
	
	public void push(int x) {
		
		DNode temp = new DNode(x);
		temp.next=head;
		head=temp;
	}
	
	public void deleteNode(DNode nodeToDelete) {
		nodeToDelete.data=nodeToDelete.next.val;
		nodeToDelete.next=nodeToDelete.next.next;
	}
}
public class DeleteNodeWithAccessToThatNode {	
	

}
